package com.mainprogram.controller;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.mainprogram.dto.PostBlog_dtoForTest;
import com.mainprogram.dto.Post_Blog_dto;
import com.mainprogram.entity.Post_Blog;
import com.mainprogram.service.PostService;

import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;


@RestController
@RequiredArgsConstructor
public class PostController {
	@Autowired
	private PostService postService;
	@GetMapping("/")
	
	public String helloString () {
		return "hello";
	}
	//-----------------------------POST---------------------------------------------------------------------		
	//create new blog
	@PostMapping(path = "/PostCreateEdit",
			consumes = MediaType.MULTIPART_FORM_DATA_VALUE,
			produces = MediaType.APPLICATION_JSON_VALUE)
	public ResponseEntity<String> createOrEditBlog(@ModelAttribute Post_Blog_dto postblog_dto) {
		postService.SavePostsContentToDB(postblog_dto);
		return ResponseEntity.ok("OK");
		
	}
	
	
	
	
//-----------------------------GET---------------------------------------------------------------------	
	//Get all post 
	@GetMapping ("/GetPostList_All")
	public ResponseEntity<?> getAllPosts(){
		List<Post_Blog> posts_datafromDB = postService.getAllPostFromDB();
		
		List<PostBlog_dtoForTest> postdto_test = new ArrayList<>();
		for (Post_Blog postBlog : posts_datafromDB) {
			PostBlog_dtoForTest posts = new PostBlog_dtoForTest(postBlog.getId(),postBlog.getName_Blog(),postBlog.getName_Title(),
					postBlog.getMain_Image(), postBlog.getCategory_Menu(), postBlog.getContent_());
			postdto_test.add(posts);
		}
		return new ResponseEntity<>(postdto_test,HttpStatus.OK);
	}
	
//-----------------------------DELETE---------------------------------------------------------------------	
	@DeleteMapping
	public ResponseEntity<String> deletePost(){
		
		return ResponseEntity.ok("OK");
	}
	
}
